@page "/login"
@using OnlineShopFrontend.Components
@using System.ComponentModel.DataAnnotations
@using OnlineShopFrontend.Dialogs;
@inject IDialogService DialogService

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" Class="mt-3"
                    @bind-Value="model.Email" For="@(() => model.Email)" />
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                    @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Don't Have An Account Yet? 
                <MudButton OnClick="@OpenRegisterWindow" Typo="Typo.body2" Color="Color.Inherit"><b>Register</b></MudButton>
            </MudText>
            
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    LoginAccountForm model = new LoginAccountForm();
    bool success;

    public class LoginAccountForm
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

    private void OpenRegisterWindow()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<RegisterDialog>("Register", options);
    }

}





