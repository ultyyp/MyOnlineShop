@page "/login"
@using OnlineShop.Frontend.Components
@using System.ComponentModel.DataAnnotations
@using OnlineShop.HttpApiClient.Entities;
@using OnlineShop.HttpApiClient;
@using OnlineShop.Frontend.Interfaces;
@using OnlineShop.HttpModels.Requests;

@inject IMyShopClient Client
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator />
	<MudGrid>
		<MudItem Style="width: 3000px;">
			<MudCard>
				<MudCardContent>
					<MudTextField Label="Email" Class="mt-3"
					@bind-Value="model.Email" For="@(() => model.Email)" />
					<MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
					@bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
				</MudCardContent>
				<MudCardActions>
					<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
				</MudCardActions>
			</MudCard>
		</MudItem>
		<MudItem>
			@if (_loginInProgress)
			{
				<MudProgressLinear Color="Color.Primary" Indeterminate="true" />
			}
		</MudItem>
	</MudGrid>
</EditForm>

@code {
	LoginRequest model = new LoginRequest();
	bool _loginInProgress;


	private async Task OnValidSubmit(EditContext context)
	{
		if (_loginInProgress)
		{
			Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
			Snackbar.Add("Login in progress...", Severity.Info);
			return;
		}

		_loginInProgress = true;

		try
		{
			await Client.Login(new LoginRequest()
				{
					Email = model.Email,
					Password = model.Password
				}, default);

			StateHasChanged();
			NavigationManager.NavigateTo("/catalog");

			await DialogService.ShowMessageBox(
				"Success!",
				"Login complete.",
				yesText: "OK"
			);
		}
		catch (MyShopApiException e)
		{
			_loginInProgress = false;
			await DialogService.ShowMessageBox("Error!", e.Message, yesText: "OK");
		}
		finally
		{
			_loginInProgress = false;
		}

	}
}











