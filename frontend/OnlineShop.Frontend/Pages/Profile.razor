@page "/profile"
@using OnlineShop.Frontend.Components
@using OnlineShop.HttpModels.Responses;
@inherits AppComponentBase

@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<div style="background-color:beige; border-radius:5px; padding:50px;">
	<h1 style="text-align:center;">Profile</h1>
	<hr style="height:3px; background-color:black; border:none; margin-bottom:15px;" />
	
	@if (_accountResponse is null && Client.IsAuthorizationTokenSet == false)
	{
		<h1 style="margin:5px;">Please Login!</h1>
	}
	else
	{
		<MudText>Id: @_accountResponse.Id</MudText>
		<MudText>Name: @_accountResponse.Name</MudText>
		<MudText>Email: @_accountResponse.Email</MudText>
		<MudButton OnClick="Logout">Logout</MudButton>
	}

</div>

@code{
	private AccountResponse? _accountResponse;
	private CancellationTokenSource _cts = new();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		if(Client.IsAuthorizationTokenSet == false) { return; }
		_accountResponse = await Client.GetCurrentAccount(_cts.Token);
	}

	private async Task Logout()
	{
		Client.ResetAuthorizationToken();
		await ClearToken();
		StateHasChanged();
		await DialogService.ShowMessageBox(
				"Success!",
				"Logged out.",
				yesText: "OK"
			);
		NavigationManager.NavigateTo("login");
	}
}





